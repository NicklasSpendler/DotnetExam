@model DotnetExam.Models.ArtistSongDTO

@{
    ViewData["Title"] = "Edit";
}

<h1>Edit</h1>

<h4>Artist</h4>
<hr />
<div class="row">
    <div class="col-md-4">
        <form asp-action="Edit">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <input type="hidden" asp-for="Artist.Id" />
            <div class="form-group">
                <label asp-for="Artist.Name" class="control-label"></label>
                <input asp-for="Artist.Name" class="form-control" />
                <span asp-validation-for="Artist.Name" class="text-danger"></span>
            </div>
            <div class="form-group">
                <input type="submit" value="Save" class="btn btn-primary" />
            </div>
        </form>
    </div>
</div>

<div class="songList">
    <h2>Song List</h2>
    <hr />
    <form asp-action="addSong">
    <input type="hidden" name="Id" value="@Model.Artist.Id"/>
    <select id="SongId" class="form-control" name="SongId">
    @foreach (var song in ViewBag.Songs)
    {
        <option value="@song.Id">@song.Name</option>
    }
    </select>
    <div class="form-group">
        <input type="submit" value="Add" class="btn btn-primary" />
    </div>
    </form>

    <ul>
    @foreach (var song in Model.Artist.Songs)
    {
        <li data-id="@song.Id">@song.Name</li>
    }
    </ul>
    </div>

<div>
    <a asp-action="Index">Back to List</a>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
