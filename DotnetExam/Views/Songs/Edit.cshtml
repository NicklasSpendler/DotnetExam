@model DotnetExam.Models.SongArtistDTO

@{
    ViewData["Title"] = "Song";
}

<h1>Edit</h1>

<h4>Song</h4>
<hr />
<div class="row">
    <div class="col-md-4">
        <form asp-action="Edit">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <input type="hidden" asp-for="Song.Id" />
            <div class="form-group">
                <label asp-for="Song.Name" class="control-label"></label>
                <input asp-for="Song.Name" class="form-control" />
                <span asp-validation-for="Song.Name" class="text-danger"></span>
            </div>
            <div class="form-group">
                <input type="submit" value="Save" class="btn btn-primary" />
            </div>
        </form>
    </div>
</div>
<br />
<div class="artistList">
    <h2>Artist</h2>
    <hr />
    <form asp-action="SetArtistOnSong">
        <input type="hidden" name="id" value="@Model.Song.Id"/>
        <div class="form-group">
            <label asp-for="ArtistId" class="control-label">Set Artist</label>
            <select asp-for="ArtistId" class="form-control" asp-items="ViewBag.Artists"></select>
        </div>
        <div class="form-group">
            <input type="submit" value="Set Artist" class="btn-primary"/>
        </div>
    </form>
</div>
<br />

@*<div class="AlbumsList">
    <h2>Add Song to Album</h2>
    <hr />
    <form asp-action="AddSongToAlbum">
        <input type="hidden" name="id" value="@Model.Song.Id"/>
        <div class="form-group">
            <label asp-for="" class="control-label">Set Song</label>
            <select asp-for="ArtistId" class="form-control" asp-items="ViewBag.Artists"></select>
        </div>
        <div class="form-group">
            <input type="submit" value="Set Artist" class="btn-primary"/>
        </div>
    </form>

</div>*@

<div>
    <a asp-action="Index">Back to List</a>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
