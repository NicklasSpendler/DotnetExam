@model IEnumerable<DotnetExam.Models.Comment>

@inject SignInManager<IdentityUser> SignInManager

@{
    ViewData["Title"] = "Comments";
}

<h1>@ViewData["Title"]</h1>

<p>
    @if (SignInManager.IsSignedIn(User))
    {
        <a asp-action="Create">Create New</a>
    }
</p>

<form asp-controller="Comments" asp-action="Index" method="get">
    <p>
        Title: <input type="text" name="SearchString" />
        <input type="submit" value="Filter" />
    </p>
</form>

<table class="table">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.Text)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.TimeStamp)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Song)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.user)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
@foreach (var item in Model) {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.Text)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.TimeStamp)
            </td>
            <td>
                @if(item.Song != null)
                {
                    @Html.DisplayFor(modelItem => item.Song.Name)
                }
            </td>
            <td>
                @if(item.user != null)
                {
                    @Html.DisplayFor(modelItem => item.user.UserName)
                }
            </td>
            <td>
                @if (SignInManager.IsSignedIn(User))
                {
                    <a asp-action="Edit" asp-route-id="@item.CommentId">Edit</a> <span>|</span>
                    <a asp-action="Details" asp-route-id="@item.CommentId">Details</a> <span>|</span>
                    <a asp-action="Delete" asp-route-id="@item.CommentId">Delete</a>
                }
            </td>
        </tr>
}
    </tbody>
</table>
